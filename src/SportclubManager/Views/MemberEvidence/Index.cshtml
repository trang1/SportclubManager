
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model SportclubManager.Models.MemberEvidenceModel

<script>
    function addDate(i) {
        var date = new Date($("#Date").attr("date"));
        var newDate = addDays(date, i);
        //alert(getTableState());
        $.ajax({
            type: "GET",
            url: "/MemberEvidence/AddDate",
            data: { date: toInternalDateString(newDate), groupId: $("#Group").val() },
            success: function(data) {
                $("#evidences").empty();
                $("#evidences").append(data);
                $("#Date").attr("date", toInternalDateString(newDate));
                $("#Date").val(toDisplayDateString(newDate));
                bindTable();
            }
        });
    }

    function addDays(date, days) {
        var d = new Date(date);
        d.setDate(d.getDate() + days);
        return d;
    }

    function toInternalDateString(d) {
        return d.getFullYear() + "-" + ("0" + (d.getMonth() + 1)).slice(-2) + "-" +("0" + d.getDate()).slice(-2);
    }

    function toDisplayDateString(d) {
        return ("0" + d.getDate()).slice(-2) + "." + ("0" + (d.getMonth() + 1)).slice(-2) + "." + d.getFullYear();
    }

    function getTableState() {
        var cells = $("[name='Present'][type=checkbox]");

        var state = new Array();
        for (var i = 0; i < cells.length; i++) {
            var obj = new Object();
            obj.MemberID = cells[i].getAttribute('memberId');
            obj.Date = cells[i].getAttribute('date');
            obj.Present = cells[i].checked;
            state.push(obj);
        }
        return JSON.stringify(state);
    }

    function PostData() {
        $.ajax({
            url: "/MemberEvidence/Save",
            async: false,
            type: "POST",
            data: getTableState(),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR + "-" + textStatus + "-" + errorThrown);
            },
            success: function (data) {
                alert(data.Message);
            }
        });
    }
</script>
<div class="container" align="center">
    <h2>Member evidence</h2>

    <div class="row">
        <div class="col-lg-6">
            @Html.DropDownList("Group", Model.GroupList, new {@class = "form-control"})
        </div>
        <div class="col-lg-6">
            <button type="button" class="btn btn-default" onclick="addDate(-1);">
                <span style="font-weight: bold; font-size: 20px"><</span>
            </button>
            @Html.TextBox("Date", Model.CurrentDateString, 
                new {@disabled = "disabled", @class = "date-disabled", @date = Model.CurrentDate.ToString("yyyy-MM-dd")})
            <button type="button" class="btn btn-default" onclick="addDate(1);">
                <span style="font-weight: bold; font-size: 20px">></span>
            </button>
        </div>
    </div>
    <p></p>
    <p></p>

    <script>
        $("#Group").change(function() {
            addDate(0);
        });
    </script>

    @if (Model.MemberEvidences != null && Model.MemberEvidences.Count > 0)
    {
        <div class="table-responsive" id="evidences">
            @Html.Partial("Evidences", Model.MemberEvidences)
        </div>
    }

    <p></p>
    <p>
        <button class="btn btn-success btn-lg" onclick="PostData()">
            Save changes
        </button>
        @*@Html.ActionLink("Save changes", "Save", "MemberEvidence", null, new {@class = "btn btn-success btn-lg"})*@
        @Html.ActionLink("Undo changes", "Index", "MemberEvidence", null, new {@class = "btn btn-warning btn-lg"})
        @Html.ActionLink("Home", "Home", "Home", null, new {@class = "btn btn-info btn-lg"})
    </p>
</div>
